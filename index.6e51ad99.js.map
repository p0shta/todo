{"mappings":"AAEA,MAAMA,EAAO,CACTC,KAAMC,SAASC,cAAc,eAC7BC,SAAUF,SAASC,cAAc,qBAGrC,MAAME,EACFC,aARJC,GAQkBA,EARlBC,KAQsBA,EARtBC,QAQ4BA,EAR5BC,SAQqCA,IAC5BC,KAAKJ,GAAKA,EAAMI,KAAKH,KAAOA,EAAQG,KAAKF,QAAUA,EAAWE,KAAKD,SAAWA,GAIvF,IAAIE,EAAgB,GAEpB,IACIA,EAAgB,IAAIC,KAAKC,MAAMC,aAAaC,QAAQ,aACtD,MAAOC,GACLL,EAAgB,GAGpB,MAAMM,EAAU,CACZC,QAAQC,GACGR,EAAcS,KAAKD,GAG9BE,eAAeC,GACIA,EACVC,KAAIJ,IACD,MAAMK,EAAYL,EAAKX,QACvB,MAAO,0CAWDW,EAAAb,gBAAAa,EAAAX,6DACAgB,EAAA,0BAAA,6GAGYA,EAAA,sBAAA,OAAAL,EAAAZ,gJAK1BkB,KAAA,IAGJC,wBAAAP,GACIL,aAAAa,QAAA,UAAQf,KAAAgB,UAAAT,gBAEXU,GACHlB,EAAAA,EAAAmB,QAAAX,GAAAA,EAAAb,KAAAuB,KAKFE,gCACMd,EAAiBS,wBAAAf,GACfZ,EAAwBI,SACxB6B,UAAOf,EAAAI,eAAAV,OAICR,SAAiB6B,UAAKf,EAAAI,eAAAV,KAChBX,KAAAiC,iBAAA,mBACfC,GAEH,GADAA,EAAAC,iBACQ,KAARD,EAAAE,cAAA,GAAAC,MAAQ,OACR,MAAEC,EAAA,IAAclC,EAAQ,CAC3BE,GAAAiC,QAAA,IAAAC,MAAAC,WAAAC,MAAA,GAEDnC,KAAA2B,EAAAE,cAAK,GAAAC,MACL7B,SAAS,IAKLS,EAAwBC,QAAcoB,GACtCrB,EAAQc,gCACRG,EAAAE,cAAAO,WAGJ5C,EAAKI,SAAS8B,iBAAiB,SAC/B,SAASC,GACL,GAA0B,WAAtBA,EAAEU,OAAOC,SACT,OAGJ,MAAMC,EAASZ,EAAEU,OAAOG,QAAQ,MAAMzC,GAEtCW,EAAmB+B,WAAAF,KAEUf,qCAGxB5B,SAAA8B,iBAAA,kBAERC","sources":["src/index.js"],"sourcesContent":["import './sass/main.scss';\r\n\r\nconst refs = {\r\n    form: document.querySelector('[data-form]'),\r\n    toDoList: document.querySelector('[data-todo-list]'),\r\n};\r\n\r\nclass ToDo {\r\n    constructor({ id, text, checked, priority }) {\r\n        (this.id = id), (this.text = text), (this.checked = checked), (this.priority = priority);\r\n    }\r\n}\r\n\r\nlet toDoesStorage = [];\r\n\r\ntry {\r\n    toDoesStorage = [...JSON.parse(localStorage.getItem('to-does'))];\r\n} catch (error) {\r\n    toDoesStorage = [];\r\n}\r\n\r\nconst toDoApp = {\r\n    addTodo(item) {\r\n        return toDoesStorage.push(item);\r\n    },\r\n\r\n    renderTodoList(toDoes) {\r\n        const markup = toDoes\r\n            .map(item => {\r\n                const isChecked = item.checked;\r\n                return `\r\n                <li class=\"card\" id=\"${item.id}\" checked=\"${item.checked}\">\r\n                    <div class=\"card__priority ${isChecked ? 'card__priority--checked' : ''}\"></div>\r\n                    <div class=\"card__body\">\r\n                        <p class=\"card__content ${isChecked ? 'card__body--checked' : ''}\">${\r\n                    item.text\r\n                }</p>\r\n                        <button class=\"card__delete\" type=\"button\">x</button>\r\n                    </div>\r\n                </li>`;\r\n            })\r\n            .join('');\r\n        return markup;\r\n    },\r\n\r\n    addToDoesToLocalStorage(item) {\r\n        localStorage.setItem('to-does', JSON.stringify(item));\r\n    },\r\n\r\n    deleteToDo(deleteItemId) {\r\n        toDoesStorage = toDoesStorage.filter(item => item.id !== deleteItemId);\r\n    },\r\n\r\n    updRenderAndAddToLocalStorage() {\r\n        toDoApp.addToDoesToLocalStorage(toDoesStorage);\r\n        refs.toDoList.innerHTML = toDoApp.renderTodoList(toDoesStorage);\r\n    },\r\n};\r\n\r\nrefs.toDoList.innerHTML = toDoApp.renderTodoList(toDoesStorage);\r\n\r\nrefs.form.addEventListener('submit', onFormSubmit);\r\nfunction onFormSubmit(e) {\r\n    e.preventDefault();\r\n    if (e.currentTarget[0].value === '') {\r\n        return;\r\n    }\r\n    const toDo = new ToDo({\r\n        id: String(new Date().getTime()).slice(8),\r\n        text: e.currentTarget[0].value,\r\n        checked: false,\r\n    });\r\n    toDoApp.addTodo(toDo);\r\n    toDoApp.updRenderAndAddToLocalStorage();\r\n    e.currentTarget.reset();\r\n}\r\n\r\nrefs.toDoList.addEventListener('click', onDeleteBtnClick);\r\nfunction onDeleteBtnClick(e) {\r\n    if (e.target.nodeName !== 'BUTTON') {\r\n        return;\r\n    }\r\n\r\n    const toDoId = e.target.closest('li').id;\r\n    toDoApp.deleteToDo(toDoId);\r\n    toDoApp.updRenderAndAddToLocalStorage();\r\n}\r\n\r\nrefs.toDoList.addEventListener('click', makeToDoStyleChecked);\r\nfunction makeToDoStyleChecked(e) {\r\n    if (e.target.nodeName === 'BUTTON') {\r\n        return;\r\n    }\r\n\r\n    const toDoId = e.target.closest('li').id;\r\n\r\n    for (const todo of toDoesStorage) {\r\n        if (todo.id === toDoId) {\r\n            todo.checked = !todo.checked;\r\n\r\n            toDoApp.updRenderAndAddToLocalStorage();\r\n        }\r\n    }\r\n}\r\n"],"names":["$1f0dc3b9307be026$var$refs","form","document","querySelector","toDoList","$1f0dc3b9307be026$var$ToDo","constructor","id","text","checked","priority","this","$1f0dc3b9307be026$var$toDoesStorage","JSON","parse","localStorage","getItem","error","$1f0dc3b9307be026$var$toDoApp","addTodo","item","push","renderTodoList","toDoes","map","isChecked","join","addToDoesToLocalStorage","setItem","stringify","deleteItemId","filter","updRenderAndAddToLocalStorage","innerHTML","addEventListener","e","preventDefault","currentTarget","value","toDo","String","Date","getTime","slice","reset","target","nodeName","toDoId","closest","deleteToDo"],"version":3,"file":"index.6e51ad99.js.map"}